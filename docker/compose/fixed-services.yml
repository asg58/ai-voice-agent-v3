version: '3.8'

services:
  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - '5672:5672' # AMQP protocol port
      - '15672:15672' # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - ai-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'rabbitmqctl', 'status']
      interval: 10s
      timeout: 5s
      retries: 5

  # Event Broker
  event-broker:
    build:
      context: ./services/event-broker
      dockerfile: Dockerfile
    container_name: event-broker
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ_HOST=rabbitmq
    networks:
      - ai-network
    restart: unless-stopped

  # GraphQL API
  graphql-api:
    build:
      context: ./services/graphql-api
      dockerfile: Dockerfile
    container_name: graphql-api
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ_HOST=rabbitmq
    ports:
      - '4000:4000'
    networks:
      - ai-network
    restart: unless-stopped

  # Service Mesh
  service-mesh:
    build:
      context: ./services/service-mesh
      dockerfile: Dockerfile
    container_name: service-mesh
    ports:
      - '9000:9000'
    networks:
      - ai-network
    restart: unless-stopped

volumes:
  rabbitmq_data:

networks:
  ai-network:
    external: true
    name: ai-voice-agent-v3_ai-network
